name: validate
on: [push]

jobs:
  # Simply applies flake8 to the codebase
  lint_code:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Setup conda
        uses: s-weigand/setup-conda@v1
        with:
          python-version: 3.7

      - name: install linting packages
        run: pip install -r tests/requirements.txt

      - name: flake8
        run: flake8 .

  # Runs the tests on combinations of the supported python/os matrix.
  test_code:
    runs-on: {{ "${{ matrix.os }}" }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7]

    steps:
      - uses: actions/checkout@v1

      - name: Setup conda
        uses: goanpeca/setup-miniconda@v1
        with:
          miniconda-version: 'latest'
          python-version: {{ "${{ matrix.python-version }}" }}
          activate-environment: test
          environment-file: .github/test_conda_env.yml
          condarc-file: .github/test_condarc.yml

      - name: install {{ cookiecutter.project_slug }}
        shell: bash -l {0}
        run: |
          pip install -e .[dev]

      - name: print package info
        shell: bash -l {0}
        run: |
          conda info -a
          conda list

      # Runs test suite and calculates coverage
      - name: run test suite
        shell: bash -l {0}
        run: |
          pytest -s --cov {{ cookiecutter.project_slug}} --cov-append --cov-report=xml

      # Runs examples in docstrings
      - name: test docstrings
        shell: bash -l {0}
        run: |
          pytest {{ cookiecutter.project_slug}} --doctest-modules

      # Runs the documentation notebooks
      - name: test notebook docs
        shell: bash -l {0}
        run: |
          pytest docs --nbval

      # upload coverage
      - name: upload coverage
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false


# This is a very useful step for debugging, it allows you to ssh into the CI
# machine (https://github.com/marketplace/actions/debugging-with-tmate)
#- name: Setup tmate session
#  uses: mxschmitt/action-tmate@v1
